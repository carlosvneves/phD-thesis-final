{smcl}
{txt}{sf}{ul off}{.-}
      name:  {res}<unnamed>
       {txt}log:  {res}D:\Google Drive\_DOUTORADO\__TESE\__CODEandDATA\__TESE_code-data\efficiency\Stata\DEA\logDEA. 3 Mar 202121_01_10.smcl
  {txt}log type:  {res}smcl
 {txt}opened on:  {res} 3 Mar 2021, 21:01:10
{txt}
{com}. 
. ** /////////////////////////////////////////////////////////////////////////////
> /************************************************************************
> (2) ANÁLISE DEA, TOMANDO COMO VARIÁVEIS:
> - INPUTS: REC; CUST;
> - OUTPUTS:  AVG;
> 
> 
> *************************************** Comentário anterior ************************************************************
> * A Escolha das variáveis leva em conta a análise realizada na parte (1), em que se 
> verifica a relação positiva entre Custos Totais por km e a avaliação geral do trecho, quando se avalia o efeito de cada variável por etapa no modelo RE. Por outro lado, o aumento da receita não implica em melhora na avaliação geral. Isto posto, o modelo parte da premissa de que, por meio da abordagem DEA orientada a input, é possível identificar aquelas unidades em há melhor equilíbrio relativo entre receitas, custos e avaliação geral. 
> A ideia seria classificar como ineficiente, aquela unidade em que as receitas estão em um nível muito elevado em relação aos custos totais e a avaliação geral do trecho.
> 
> Vale a observação de que Profeta (PROFETA, 2014: REGULAÇÃO E EFICIÊNCIA DOS MODELOS DE CONCESSÕES DE RODOVIAS NO BRASIL, TESE DE DOUTORADO - UFV/MG) entendeu que a eficiência estaria relacionada simplesmente à minimização dos custos totais. Assim elegeu como INPUT custos totais, e como OUTPUS Receitas Totais e Avaliação Geral. Contudo, aparentemente, Profeta não se atentou ao fato de que, de acordo com os relatórios financeiros das concessionárias, os custos totais incluem investimentos, que naturalmente implicam em melhora da condição da rodovia (e por consequência na sua avaliação. Assim, pode ser que não faça sentido a eficiência estar baseada na minimização desses custos.
> Os resultados da parte (1) parecem indicar também esse fato e, por isso, optou-se por uma configuração diferente de INPUTs e OUTPUTs.
> *************************************** Comentário atualizado **********************************************************
> 
> OUTPUT ORIENTED (para compatibilizar com SFA)
> 
> 
> *************************************************************************/
. 
. // apaga qualquer unidade que tenha valor de receita ou custo nulo 
. drop if rec  <=0 
{txt}(0 observations deleted)

{com}. drop if cust <=0
{txt}(1 observation deleted)

{com}. 
. /*
> subsititui os id's originais por id's para dados em painel (um id para cada concessionária)
> */
. // lista de concessionárias na base de dados 
. levelsof conc, local(concs)
{res}{txt}`"AUTOFERNAODIAS"' `"AUTOFLUMINENSE"' `"AUTOLITORALSUL"' `"AUTOPLANALTOSUL"' `"AUTOREGIS"' `"CCRPONTE"' `"CONCEBRA"' `"CONCEPA"' `"CONCER"' `"CRO"' `"CRT"' `"ECO101"' `"ECOPONTE"' `"ECOSUL"' `"MGORODOVIAS"' `"MSVIA"' `"NOVADUTRA"' `"RODOVIADOACO"' `"TRANSBRASILIANA"' `"VIA040"' `"VIABAHIA"'

{com}. // contador local para gerar id
. local count 1
{txt}
{com}. // loop na lista de concessionárias
. foreach v in `concs'{c -(}
{txt}  2{com}.         
.         // substitui o id original, para os casos em que há match entre o nome da
.         // concessionária na base e na lista de nomes 
.         quietly replace id = `count' if conc == "`v'"
{txt}  3{com}.         local ++count // atualiza o contador de id
{txt}  4{com}. {c )-}
{txt}
{com}. 
. // gera variáveis dummy para marcar as etapas
. quietly gen dEtapa2 = (etp==2)
{txt}
{com}. quietly gen dEtapa3 = (etp==3)
{txt}
{com}. 
. // Como a análise na parte (1) indicou não haver variação relevante nas variáveis ao longo do tempo, optou-se por calcular as médias do período das variáveis de input e output
. quietly bysort id: gen custm = log(cust_km_adj)
{txt}
{com}. quietly bysort id: gen recm = log(rec_km_adj)
{txt}
{com}. quietly bysort id: gen avgm = log(avg)
{txt}
{com}. quietly bysort id: gen tarm = tar_adj
{txt}
{com}. // identifica duplicatas
. quietly by id: gen dup = cond(_N==1, 0, _n)
{txt}
{com}. // apaga duplicatas
. drop if dup > 1
{txt}(60 observations deleted)

{com}. 
. // gera índices para as DMUs
. quietly gen dmu = id
{txt}
{com}. 
. // apaga variáveis dispensáveis para a análise DEA
. //quietly drop id ano anoconc cust cust_km rec rec_km avg dup
. 
. // salva dados para simulação DEA
. save data_dea, replace
{txt}file data_dea.dta saved

{com}. 
. // define inputs e outputs da análise DEA (colocar em log???????)
. global inp recm custm
{txt}
{com}. global out avgm 
{txt}
{com}. 
. 
. /***********************************************************************
> ANÁLISE DEA CONSIDERANDO AS ORIENTAÇÕES INPUT E OUTPUT
> ************************************************************************/
. foreach direction in i o{c -(}
{txt}  2{com}. 
.         * DEA - variable returns to scale
.         quietly: dea $inp = $out, rts(vrs) ort(`direction') stage(2) saving(dea_results)
{txt}  3{com}.         mat deascores = r(dearslt)
{txt}  4{com}.         mat deascores = deascores[1...,"theta"]
{txt}  5{com}.         sort dmu
{txt}  6{com}.         cap drop dea1
{txt}  7{com}.         svmat deascores, names(dea)
{txt}  8{com}.         rename dea1 deascore_`direction'
{txt}  9{com}.         gen efficient_`direction' = deascore_`direction' == 1
{txt} 10{com}. 
. {c )-}
options: RTS(VRS) ORT(IN) STAGE(2)
{res}{com}options: RTS(VRS) ORT(OUT) STAGE(2)
{res}{txt}
{com}. 
. * Escores de eficiência após primeiro estágio
. tabstat deascore_i deascore_o efficient_i efficient_o, columns(statistics) statistics(mean sd median min max) format(%7.0g)

{txt}{ralign 12:variable} {...}
{c |}      mean        sd       p50       min       max
{hline 13}{c +}{hline 50}
{ralign 12:deascore_i} {...}
{c |}{...}
   {res} .87373    .09999    .89354    .68728         1
{txt}{ralign 12:deascore_o} {...}
{c |}{...}
   {res} .93458    .08293     .9982    .79106         1
{txt}{ralign 12:efficient_i} {...}
{c |}{...}
   {res} .19048    .40237         0         0         1
{txt}{ralign 12:efficient_o} {...}
{c |}{...}
   {res} .19048    .40237         0         0         1
{txt}{hline 13}{c BT}{hline 50}

{com}. 
. 
. di " ##### ANÁLISE DEA - INPUTS: REC;CUST - OUTPUTS: AVG ##### "
{res} ##### ANÁLISE DEA - INPUTS: REC;CUST - OUTPUTS: AVG ##### 
{txt}
{com}. 
. list dmu conc deascore_i deascore_o
{txt}
     {c TLC}{hline 5}{c -}{hline 17}{c -}{hline 10}{c -}{hline 10}{c TRC}
     {c |} {res}dmu              conc   deasco~i   deasco~o {txt}{c |}
     {c LT}{hline 5}{c -}{hline 17}{c -}{hline 10}{c -}{hline 10}{c RT}
  1. {c |} {res}  1    AUTOFERNAODIAS   .8399009   .8574993 {txt}{c |}
  2. {c |} {res}  2    AUTOFLUMINENSE   .8211499   .7910565 {txt}{c |}
  3. {c |} {res}  3    AUTOLITORALSUL   .8227695   .9020526 {txt}{c |}
  4. {c |} {res}  4   AUTOPLANALTOSUL   .9074495   .8285291 {txt}{c |}
  5. {c |} {res}  5         AUTOREGIS   .8442217   .9982021 {txt}{c |}
     {c LT}{hline 5}{c -}{hline 17}{c -}{hline 10}{c -}{hline 10}{c RT}
  6. {c |} {res}  6          CCRPONTE   .6872804   .9982021 {txt}{c |}
  7. {c |} {res}  7          CONCEBRA   .9615387   .8518055 {txt}{c |}
  8. {c |} {res}  8           CONCEPA   .7110896   .7910565 {txt}{c |}
  9. {c |} {res}  9            CONCER   .7358788   .8464723 {txt}{c |}
 10. {c |} {res} 10               CRO    .932109   .9585338 {txt}{c |}
     {c LT}{hline 5}{c -}{hline 17}{c -}{hline 10}{c -}{hline 10}{c RT}
 11. {c |} {res} 11               CRT   .8813273   .9982021 {txt}{c |}
 12. {c |} {res} 12            ECO101   .8935406   .8169858 {txt}{c |}
 13. {c |} {res} 13          ECOPONTE   .7639909   .9982021 {txt}{c |}
 14. {c |} {res} 14            ECOSUL          1          1 {txt}{c |}
 15. {c |} {res} 15       MGORODOVIAS   .9426036   .9983707 {txt}{c |}
     {c LT}{hline 5}{c -}{hline 17}{c -}{hline 10}{c -}{hline 10}{c RT}
 16. {c |} {res} 16             MSVIA          1          1 {txt}{c |}
 17. {c |} {res} 17         NOVADUTRA   .7565728   .9982021 {txt}{c |}
 18. {c |} {res} 18      RODOVIADOACO   .9091659   .9982021 {txt}{c |}
 19. {c |} {res} 19   TRANSBRASILIANA          1          1 {txt}{c |}
 20. {c |} {res} 20            VIA040          1          1 {txt}{c |}
     {c LT}{hline 5}{c -}{hline 17}{c -}{hline 10}{c -}{hline 10}{c RT}
 21. {c |} {res} 21          VIABAHIA   .9378103   .9945928 {txt}{c |}
     {c BLC}{hline 5}{c -}{hline 17}{c -}{hline 10}{c -}{hline 10}{c BRC}

{com}. /************************************************************************
> SECOND-STAGE REGRESSION ANALYSIS - TOBIT
> 
> *************************************************************************/
. * variáveis explicativas
. global reglist npp tar dEtapa2 dEtapa3
{txt}
{com}. 
. tabstat $reglist, columns(statistics) statistics(mean sd median min max) format(%7.0g)

{txt}{ralign 12:variable} {...}
{c |}      mean        sd       p50       min       max
{hline 13}{c +}{hline 50}
{ralign 12:npp} {...}
{c |}{...}
   {res}  5.381     3.041         5         1        11
{txt}{ralign 12:tar} {...}
{c |}{...}
   {res} 4.9443    2.9474       3.6       1.4     12.22
{txt}{ralign 12:dEtapa2} {...}
{c |}{...}
   {res} .38095    .49761         0         0         1
{txt}{ralign 12:dEtapa3} {...}
{c |}{...}
   {res} .33333    .48305         0         0         1
{txt}{hline 13}{c BT}{hline 50}

{com}. 
. * (Naive) Censored Regression Analysis - eficiência orientada a input
. /*
> quietly: stepwise, pr(.20): tobit deascore_i $reglist, ul(1) /* backward selection */
> eststo tob_inp
> */
. 
. * (Naive) Censored Regression Analysis - eficiência orientada a output
. //quietly: stepwise, pr(.20): tobit deascore_o $reglist, ul(1) /* backward selection */
. //eststo tob_out
. 
. /************************************************************************
> SECOND-STAGE REGRESSION ANALYSIS - Procedimento Simar & Wilson (2007)
> 
> *************************************************************************/
. * Simar & Wilson (2007) Procedure - orientado a input
. // simarwilson deascore_i $reglist, unit dots reps(1999) 
. // eststo sw_inp
. /*logscore makes simarwilson use the natural logarithm of the efficiency score as the left-hand-side
>         variable in the truncated regressions.  With logscore specified, truncation is at 0 rather than
>         at 1 and is always one sided.  If externally estimated scores are used, do not take the
>         logarithm beforehand, but let the original score enter the estimation procedure as depvar.*/
. 
. 
. * Simar & Wilson (2007) Procedure - orientado a output
. //simarwilson deascore_o $reglist, logscore nounit dots reps(5000)
. //eststo sw_out
. 
. /*estimates table tob_inp sw_inp tob_out sw_out, b stats(N r2 r2_o r2_b r2_w F chi2) star (.05 .1 .2)*/
. 
. //estimates table tob_out sw_out, b stats(N r2 r2_o r2_b r2_w F chi2) star (.05 .1 .2)
.  
. 
. ********************************************************************************
. * adotando outro código, o algoritmo fica bem mais simples:
. ********************************************************************************
. 
. teradialbc $out = $inp, rts(vrs) base(o) heterogeneous tename(score) tebc(tobscore) biasboot(te1bias) varboot(te1var) biassqvar(te1biassqvar) telower(te1lower) teupper(te1upper) reps(2000)
{res}{txt}{res}
{p 1 1 7 71} {text}Radial (Debreu-Farrell) {input:output}{text}-based measures of technical efficiency under assumption of {input:VRS} {text} technology are computed for the following data:{p_end}

    Number of data points ({input:K}{text}) = {res}21
{txt}    Number of outputs     ({input:M}{text}) = {res}1
{txt}    Number of inputs      ({input:N}{text}) = {res}2

{p 1 1 7 71} {text}Data for reference set are not provided. Reference set is formed by {res}21{res}{text} data points, for which measures of technical efficiency are computed.{p_end}
{p 1 1 7 71}{text}{hline 63}{p_end}
{res}
{p 1 1 7 71} {text}Bootstrapping reference set formed by {res}21{res}{text} data points and computing radial (Debreu-Farrell) {input: output}{text}-based measures of technical efficiency under assumption of {input:VRS}{text} technology for each of {res}21{res}{text} data points relative to the bootstrapped reference set {text} {p_end}

 Smoothed {com}heterogeneous{txt} bootstrap ({res}2000{txt} replications)

{hline 4}{c +}{hline 3} 1 {hline 3}{c +}{hline 3} 2 {hline 3}{c +}{hline 3} 3 {hline 3}{c +}{hline 3} 4 {hline 3}{c +}{hline 3} 5 
{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.    50
{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.   100
{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.   150
{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.   200
{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.   250
{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.   300
{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.   350
{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.   400
{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.   450
{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.   500
{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.   550
{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.   600
{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.   650
{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.   700
{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.   750
{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.   800
{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.   850
{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.   900
{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.   950
{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.  1000
{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.  1050
{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.  1100
{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.  1150
{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.  1200
{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.  1250
{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.  1300
{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.  1350
{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.  1400
{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.  1450
{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.  1500
{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.  1550
{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.  1600
{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.  1650
{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.  1700
{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.  1750
{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.  1800
{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.  1850
{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.  1900
{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.  1950
{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.{res}{txt}{res}{txt}{res}{txt}.  2000
{res}{p 1 1 7 71}{text}{hline 63}{p_end}

{p 1 1 7 71} {result}Warning: for one or more data points statistic [(1/3)*(bias)^2/var] is smaller than 1; bias-correction should not be used{p_end}
{txt}
{com}. 
. * (Naive) Censored Regression Analysis - eficiência orientada a output
. tobit tobscore $reglist,  ll(1) /* backward selection */
{res}{txt}
Refining starting values:

Grid node 0:{space 3}log likelihood = {res: 17.480489}

Fitting full model:
{res}
{txt}Iteration 0:{space 3}log likelihood = {res: 17.480489}  
Iteration 1:{space 3}log likelihood = {res: 17.480489}  
{res}
{txt}Tobit regression{col 49}Number of obs{col 67}= {res}        19
{txt}{col 49}   Uncensored{col 67}= {res}        19
{txt}{col 1}Limits: lower = {res:1}{col 49}   Left-censored{col 67}= {res}         0
{txt}{col 1}        upper = {res:+inf}{col 49}   Right-censored{col 67}= {res}         0

{txt}{col 49}LR chi2({res}4{txt}){col 67}= {res}      2.30
{txt}{col 49}Prob > chi2{col 67}= {res}    0.6808
{txt}Log likelihood = {res} 17.480489{txt}{col 49}Pseudo R2{col 67}= {res}   -0.0704

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}    tobscore{col 14}{c |}      Coef.{col 26}   Std. Err.{col 38}      t{col 46}   P>|t|{col 54}     [95% Con{col 67}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 9}npp {c |}{col 14}{res}{space 2}  .015402{col 26}{space 2} .0099721{col 37}{space 1}    1.54{col 46}{space 3}0.143{col 54}{space 4}-.0058531{col 67}{space 3} .0366572
{txt}{space 9}tar {c |}{col 14}{res}{space 2} .0018489{col 26}{space 2} .0149591{col 37}{space 1}    0.12{col 46}{space 3}0.903{col 54}{space 4}-.0300356{col 67}{space 3} .0337333
{txt}{space 5}dEtapa2 {c |}{col 14}{res}{space 2}-.0255059{col 26}{space 2} .1084125{col 37}{space 1}   -0.24{col 46}{space 3}0.817{col 54}{space 4}-.2565817{col 67}{space 3} .2055699
{txt}{space 5}dEtapa3 {c |}{col 14}{res}{space 2}-.0605244{col 26}{space 2} .1029202{col 37}{space 1}   -0.59{col 46}{space 3}0.565{col 54}{space 4}-.2798937{col 67}{space 3} .1588449
{txt}{space 7}_cons {c |}{col 14}{res}{space 2} 1.040618{col 26}{space 2} .1412193{col 37}{space 1}    7.37{col 46}{space 3}0.000{col 54}{space 4} .7396158{col 67}{space 3}  1.34162
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
var(e.tobs~e){c |}{col 14}{res}{space 2} .0092983{col 26}{space 2} .0030168{col 54}{space 4} .0046566{col 67}{space 3} .0185665
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}

{com}. eststo tob_out1
{txt}
{com}. 
. * Algoritmo #2 de Simar-Wilson (2007)
. //simarwilson scorebc $reglist, logscore nounit reps(5000) dots
. //eststo sw_out1
. 
. //predict ohat
. 
. //Simar and Wilson (2007) two-stage efficiency analysis with internal bias correction, that is,
. // algorithm 2
. simarwilson ( $out = $inp ) $reglist, logscore nounit algorithm(2) reps(2000) bcreps(1500) dots rts(vrs) base(output) saveall(BBSTR) tebc(swscore)

{txt}Bootstrap (bias correction) replications ({res}1500{txt})
{hline 4}{c +}{hline 3} 1 {hline 3}{c +}{hline 3} 2 {hline 3}{c +}{hline 3} 3 {hline 3}{c +}{hline 3} 4 {hline 3}{c +}{hline 3} 5
.................................................. 50
.................................................. 100
.................................................. 150
.................................................. 200
.................................................. 250
.................................................. 300
.................................................. 350
.................................................. 400
.................................................. 450
.................................................. 500
.................................................. 550
.................................................. 600
.................................................. 650
.................................................. 700
.................................................. 750
.................................................. 800
.................................................. 850
.................................................. 900
.................................................. 950
.................................................. 1000
.................................................. 1050
.................................................. 1100
.................................................. 1150
.................................................. 1200
.................................................. 1250
.................................................. 1300
.................................................. 1350
.................................................. 1400
.................................................. 1450
.................................................. 1500

Bootstrap (conf. intervals) replications ({res}2000{txt})
{hline 4}{c +}{hline 3} 1 {hline 3}{c +}{hline 3} 2 {hline 3}{c +}{hline 3} 3 {hline 3}{c +}{hline 3} 4 {hline 3}{c +}{hline 3} 5
.................................................. 50
.................................................. 100
.................................................. 150
.................................................. 200
.................................................. 250
.................................................. 300
.............................{err}x{txt}.................... 350
.................................................. 400
..................................{err}x{txt}............... 450
.................................................. 500
.................................................. 550
.................................................. 600
.................................................. 650
{err}x{txt}............................{err}x{txt}.................... 700
.................................................. 750
.................................................. 800
.................................................. 850
.................................................. 900
.................................................. 950
.................................................. 1000
.................................................. 1050
.................................................. 1100
.................................................. 1150
................{err}x{txt}................................. 1200
.................................................. 1250
.................................................. 1300
.................................................. 1350
.................................................. 1400
..........................................{err}x{txt}....... 1450
.................................................. 1500
.................................................. 1550
.................................................. 1600
.................................................. 1650
.................................................. 1700
.................................................. 1750
.................................................. 1800
.............................{err}x{txt}.................... 1850
.................................................. 1900
.................................................. 1950
.................................................. 2000
....... 2007

Simar & Wilson (2007) eff. analysis      Number of obs             =  {res}      21
{txt}(algorithm #{res}2{txt})                           Number of efficient DMUs  =  {res}       0
                                         {txt}Number of bootstr. reps   =  {res}    2000
                                         {txt}Wald chi2({res}4{txt})              =  {res}    1.00
{txt}inefficient if ln(swscore){res} > {txt}0           Prob > chi2({res}4{txt})            =  {res}  0.9104

{txt}{hline 78}
Data Envelopment Analysis:               Number of DMUs            =        {res}21
                                         {txt}Number of ref. DMUs       =        {res}21
{txt}output oriented (Farrell)                Number of outputs         =         {res}1
{txt}variable returns to scale                Number of inputs          =         {res}2
{txt}bias corrected efficiency measure        Number of reps (bc)       =      {res}1500

{txt}{hline 13}{c TT}{hline 64}
{col 13} {c |}  Observed   Bootstrap                           Percentile
{col 1}inefficiency {c |}      Coef.   Std. Err.      z    P>|z|     [{res}95{txt}% Conf. Interval]
{hline 13}{c +}{hline 64}
{res}ln(swscore)  {txt}{c |}
{res}{col 10}{txt}npp {c |}  {res} .0718406   .0883948     0.81   0.416     .0043116    .2107468
{col 10}{txt}tar {c |}  {res} .0196238   .0855149     0.23   0.818    -.0615258    .1484282
{col 6}{txt}dEtapa2 {c |}  {res}-.0520017   .6347588    -0.08   0.935    -.6351317      .72515
{col 6}{txt}dEtapa3 {c |}  {res} -.300154   .4870214    -0.62   0.538    -1.006684    .2786556
{col 8}{txt}_cons {c |}  {res}-.4717031   1.622259    -0.29   0.771    -2.438898    .2945025
{txt}{hline 13}{c +}{hline 64}
{col 7}/sigma {c |}  {res} .1531247   .0682546     2.24   0.025     .0521492    .2631432
{txt}{hline 13}{c BT}{hline 64}

{com}. eststo sw_out2
{txt}
{com}. 
. predict ohat_2
{txt}(option {bf:xb} assumed; fitted values)

{com}. 
. 
. * valores de eficiência entre 0 e 1
. gen deascore_bc = 1./tobscore
{txt}(2 missing values generated)

{com}. replace deascore_bc = 1 if deascore_bc > 1
{txt}(2 real changes made)

{com}. 
. //gen deascore_sw = 1-exp(ohat) //1./ohat
. //replace deascore_sw = 1 if deascore_sw > 1
. 
. gen deascore_sw = 1./swscore
{txt}
{com}. //replace deascore_sw = 1 if deascore_sw_2 > 1
. 
. 
. tabstat deascore_o deascore_bc deascore_sw, columns(statistics) statistics(mean sd median min max) format(%7.0g)

{txt}{ralign 12:variable} {...}
{c |}      mean        sd       p50       min       max
{hline 13}{c +}{hline 50}
{ralign 12:deascore_o} {...}
{c |}{...}
   {res} .93458    .08293     .9982    .79106         1
{txt}{ralign 12:deascore_bc} {...}
{c |}{...}
   {res} .92487    .08376    .96577    .79035         1
{txt}{ralign 12:deascore_sw} {...}
{c |}{...}
   {res} .90807    .08051    .91808    .78554    .99397
{txt}{hline 13}{c BT}{hline 50}

{com}. 
. est clear  // clear the est locals
{res}{txt}
{com}. estpost tabstat deascore_o deascore_bc deascore_sw, c(stat) stat(mean sd min max n)

{txt}Summary statistics: mean sd min max count
     for variables: deascore_o deascore_bc deascore_sw

{space 0}{space 0}{ralign 12:}{space 1}{c |}{space 1}{ralign 9:e(mean)}{space 1}{space 1}{ralign 9:e(sd)}{space 1}{space 1}{ralign 9:e(min)}{space 1}{space 1}{ralign 9:e(max)}{space 1}{space 1}{ralign 9:e(count)}{space 1}
{space 0}{hline 13}{c   +}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}
{space 0}{space 0}{ralign 12:deascore_o}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .9345794}}}{space 1}{space 1}{ralign 9:{res:{sf: .0829269}}}{space 1}{space 1}{ralign 9:{res:{sf: .7910565}}}{space 1}{space 1}{ralign 9:{res:{sf:        1}}}{space 1}{space 1}{ralign 9:{res:{sf:       21}}}{space 1}
{space 0}{space 0}{ralign 12:deascore_bc}{space 1}{c |}{space 1}{ralign 9:{res:{sf:  .924874}}}{space 1}{space 1}{ralign 9:{res:{sf: .0837611}}}{space 1}{space 1}{ralign 9:{res:{sf: .7903472}}}{space 1}{space 1}{ralign 9:{res:{sf:        1}}}{space 1}{space 1}{ralign 9:{res:{sf:       21}}}{space 1}
{space 0}{space 0}{ralign 12:deascore_sw}{space 1}{c |}{space 1}{ralign 9:{res:{sf: .9080683}}}{space 1}{space 1}{ralign 9:{res:{sf:  .080512}}}{space 1}{space 1}{ralign 9:{res:{sf: .7855441}}}{space 1}{space 1}{ralign 9:{res:{sf: .9939744}}}{space 1}{space 1}{ralign 9:{res:{sf:       21}}}{space 1}

{com}. esttab using "summary_eff_dea.tex" , ///
>  cells("mean(fmt(%13.2fc)) sd(fmt(%13.2fc)) min(fmt(%13.2fc)) max(fmt(%13.2fc)) count(fmt(%13.0fc))") nonumber ///
>   nomtitle nonote noobs label collabels("Mean" "SD" "Min" "Max" "N") tex replace
{res}{txt}(note: file summary_eff_dea.tex not found)
(output written to {browse  `"summary_eff_dea.tex"'})

{com}. 
. 
. estimates table tob_out1 sw_out2, b stats(N r2 r2_o r2_b r2_w F chi2) star (.05 .1 .2)
{err}estimation result tob_out1 not found
{txt}{search r(111), local:r(111);}

end of do-file

{search r(111), local:r(111);}

{com}. exit, clear
